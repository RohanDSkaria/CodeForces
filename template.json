{
	"CP temp":{
		"prefix": "tm",
		"body": [
			"#include <bits/stdc++.h>",
			"using namespace std;",
			"#define IOS ios::sync_with_stdio(0);cin.tie(nullptr);cout.tie(nullptr);",
			"#define endl '\\n'",
			"#define int long long",
			"#define v vector",
			"#define vi v<int>",
			"#define pb push_back",
			"#define all(a) a.begin(),a.end()",
			"#define rall(a) a.rbegin(),a.rend()",
			"#define deb(...) _print(#__VA_ARGS__, __VA_ARGS__);",
			"template<typename F,typename S>ostream& operator<<(ostream& os,const pair<F,S>& p){return os<<\"{\"<<p.first<<\",\"<<p.second<<\"}\";}",
			"template<typename F,typename S>istream& operator>>(istream& is,pair<F,S>& p){return is>>p.first>>p.second;}",
			"template<typename T>istream& operator>>(istream& is, v<T>& v){for(auto&x:v)is>>x;return is;}",
			"template<typename T>ostream& operator<<(ostream& os, v<T>& v){for(auto&x:v)os<<x<<' ';return os;}",
			"template<typename T>ostream& operator<<(ostream& os, set<T>& s){for(auto&x:s)os<<x<<' ';return os;}",
			"template<typename T>ostream& operator<<(ostream& os, v<v<T>>& v){os<<endl;for(auto&i:v)os<<i<<endl;return os;}",
			"template<typename K,typename V>ostream& operator<<(ostream& os,map<K,V>& m){os<<endl;for(auto&[k,v]:m)os<<k<<\" -> \"<<v<<endl;return os;}",
			"template<typename T,typename... Args>void _print(string s,T v,Args... args){size_t c=s.find(',');cout<<s.substr(0,c)<<\" = \"<<v<<endl;if constexpr(sizeof...(args)>0){_print(s.substr(c+1),args...);}}",
			"",
			"void solve(){",
			"    $0",
			"}",
			"int32_t main(){",
			"    IOS int t=1;",
			"    cin>>t;$1",
			"    while(t--) solve();",
			"}",
			"/*",
			"",
			"*/"
		]
	},

	"USACO temp":{
		"prefix": "us",
		"body": [
			"/*",
			"ID: rohanda3",
			"TASK: $1",
			"LANG: C++",
			"*/",
			"#include <bits/stdc++.h>",
			"using namespace std;",
			"#define IOS ios::sync_with_stdio(0);cin.tie(nullptr);cout.tie(nullptr);",
			"#define endl '\\n'",
			"#define int long long",
			"#define v vector",
			"#define vi v<int>",
			"#define pb push_back",
			"#define all(a) a.begin(),a.end()",
			"#define rall(a) a.rbegin(),a.rend()",
			"#define deb(...) _print(#__VA_ARGS__, __VA_ARGS__);",
			"template<typename F,typename S>ostream& operator<<(ostream& os,const pair<F,S>& p){return os<<\"{\"<<p.first<<\",\"<<p.second<<\"}\";}",
			"template<typename F,typename S>istream& operator>>(istream& is,pair<F,S>& p){return is>>p.first>>p.second;}",
			"template<typename T>istream& operator>>(istream& is, v<T>& v){for(auto&x:v)is>>x;return is;}",
			"template<typename T>ostream& operator<<(ostream& os, v<T>& v){for(auto&x:v)os<<x<<' ';return os;}",
			"template<typename T>ostream& operator<<(ostream& os, set<T>& s){for(auto&x:s)os<<x<<' ';return os;}",
			"template<typename T>ostream& operator<<(ostream& os, v<v<T>>& v){os<<endl;for(auto&i:v)os<<i<<endl;return os;}",
			"template<typename K,typename V>ostream& operator<<(ostream& os,map<K,V>& m){os<<endl;for(auto&[k,v]:m)os<<k<<\" -> \"<<v<<endl;return os;}",
			"template<typename T,typename... Args>void _print(string s,T v,Args... args){size_t c=s.find(',');cout<<s.substr(0,c)<<\" = \"<<v<<endl;if constexpr(sizeof...(args)>0){_print(s.substr(c+1),args...);}}",
			"",
			"void solve(){",
			"    $0",
			"}",
			"int32_t main(){",
			"    IOS int t=1;",
			"    // freopen(\"$1.in\",\"r\",stdin);",
			"    // freopen(\"$1.out\",\"w\",stdout);",
			"    // cin>>t;",
			"    while(t--) solve();",
			"}",
			"/*",
			"",
			"*/"
		]
	},

	"Binary Exponentiation":{
		"prefix": "bix",
		"body": [
			"int po(int a, int b){int k=1;while(b){if(b&1)k*=a;a*=a;b>>=1;}return k;}",
			"int pom(int a, int b){int k=1;while(b){if(b&1)k=k*a%m;a=a*a%m;b>>=1;}return k;}"
		]
	},
	
	"Segment Tree":{
		"prefix": "segt",
		"body": [
			"template<typename T>",
			"class segtree{",
			"public:",
			"    v<T> t;",
			"    int n;",
			"    T idn;",
			"    segtree(v<T> &a,T idn):idn(idn){",
			"        n=a.size();",
			"        t.assign(4*n,idn);",
			"        for(int i=0; i<n; i++) set(i,a[i]);",
			"    }",
			"    T merge(T a,T b){",
			"        return $0",
			"    }",
			"    int query(int l,int r){",
			"        function<T(int,int,int)> f=[&](int tid,int tl,int tr)->T {",
			"            if(l>tr || r<tl) return idn;",
			"            if(l<=tl && r>=tr) return t[tid];",
			"            int tm=(tl+tr)/2;",
			"            return merge(f(2*tid+1,tl,tm),f(2*tid+2,tm+1,tr));",
			"        };",
			"        return f(0,0,n-1);",
			"    }",
			"    void set(int id,T val){",
			"        function<void(int,int,int)> f=[&](int tid,int tl,int tr){",
			"            if(tl==tr){",
			"                t[tid]=val;",
			"                return;",
			"            }",
			"            int tm=(tl+tr)/2;",
			"            if(id<=tm) f(2*tid+1,tl,tm);",
			"            else f(2*tid+2,tm+1,tr);",
			"            t[tid]=merge(t[2*tid+1],t[2*tid+2]);",
			"        };",
			"        f(0,0,n-1);",
			"    }",
			"};"
		]
	},
	
	"4 dir array":{
		"prefix": "4d",
		"body": [
			"const int dx[4]={1,0,-1,0};",
			"const int dy[4]={0,-1,0,1};"
		]
	},
	
	"8 dir array":{
		"prefix": "8d",
		"body": [
			"const int dx[8]={1,1,0,-1,-1,-1,0,1};",
			"const int dy[8]={0,-1,-1,-1,0,1,1,1};"
		]
	},
	
	"isk":{
		"prefix": "isk",
		"body": [
			"bool isk($1 &a, int i, int j){",
			"    return i>=0 && i<a.size() && j>=0 && j<a[0].size()$2;",
			"}$0"
		]
	},
	
	"dfs":{
		"prefix": "dfs",
		"body": [
			"void dfs($1 &a, int x, int y){",
			"    isv[x][y]=1;",
			"    for(int d=0; d<$2; d++){",
			"        int nx=x+dx[d];",
			"        int ny=y+dy[d];",
			"        if(isk(a,nx,ny) && !isv[nx][ny] && a[nx][ny]==$3) dfs(a,nx,ny);",
			"    }",
		    "}$0"
		]
	},
	
	"new xy":{
		"prefix": "nx",
		"body": [
			"int nx=x+dx[d];",
			"int ny=y+dy[d];"
		]
	},

	"CP temp with bool solve":{
		"prefix": "btm",
		"body": [
			"#include <bits/stdc++.h>",
			"using namespace std;",
			"#define IOS ios::sync_with_stdio(0);cin.tie(nullptr);cout.tie(nullptr);",
			"#define endl '\\n'",
			"#define int long long",
			"#define v vector",
			"#define vi v<int>",
			"#define pb push_back",
			"#define all(a) a.begin(),a.end()",
			"#define rall(a) a.rbegin(),a.rend()",
			"#define deb(...) _print(#__VA_ARGS__, __VA_ARGS__);",
			"template<typename F,typename S>ostream& operator<<(ostream& os,const pair<F,S>& p){return os<<\"{\"<<p.first<<\",\"<<p.second<<\"}\";}",
			"template<typename F,typename S>istream& operator>>(istream& is,pair<F,S>& p){return is>>p.first>>p.second;}",
			"template<typename T>istream& operator>>(istream& is, v<T>& v){for(auto&x:v)is>>x;return is;}",
			"template<typename T>ostream& operator<<(ostream& os, v<T>& v){for(auto&x:v)os<<x<<' ';return os;}",
			"template<typename T>ostream& operator<<(ostream& os, set<T>& s){for(auto&x:s)os<<x<<' ';return os;}",
			"template<typename T>ostream& operator<<(ostream& os, v<v<T>>& v){os<<endl;for(auto&i:v)os<<i<<endl;return os;}",
			"template<typename K,typename V>ostream& operator<<(ostream& os,map<K,V>& m){os<<endl;for(auto&[k,v]:m)os<<k<<\" -> \"<<v<<endl;return os;}",
			"template<typename T,typename... Args>void _print(string s,T v,Args... args){size_t c=s.find(',');cout<<s.substr(0,c)<<\" = \"<<v<<endl;if constexpr(sizeof...(args)>0){_print(s.substr(c+1),args...);}}",
			"",
			"bool solve(){",
			"    $0",
			"}",
			"int32_t main(){",
			"    IOS int t=1;",
			"    cin>>t;$1",
			"    while(t--) cout<<(solve()?\"Yes\":\"No\")<<endl;",
			"}",
			"/*",
			"",
			"*/"
		]
	}
}